#hostnames that the server will allow connections on
ALLOWED_HOSTS = [
    ]

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')9di26o6jj(iob5)367rrtdm5w0isr&i6hf)q)&#p@xcef5045'

#the school's identifying name (does not need to be a full name)
SCHOOL_NAME="Xavier Yotsky Secondary"

#school initial (used to form name of site/app)
SCHOOL_INITIAL="XY"

#contact details for email help
ADMIN={
    #short name, used in help link
    "short_name":"Admin",
    #full name
    "full_name":"Admin Admin",
    #honourific
    "honourific":"Mrs. Admin",
    #default greeting used in generated help email
    "greeting":"Hello Admin,\n",
    #email address for equiries to be sent to
    "email":"default@admin.com",
    #phone extension of admin
    "phone_ext":"000",
    }

#text displayed on index page
WELCOME_TEXT="Welcome to "+ SCHOOL_INITIAL + "APAS!"

import ldap
from django_auth_ldap.config import LDAPSearch,NestedActiveDirectoryGroupType

#the ldap url of the server hosting the user database
AUTH_LDAP_SERVER_URI="LDAP://"

#distinguished name and password of an account in the database to bind to
AUTH_LDAP_BIND_DN=""
AUTH_LDAP_BIND_PASSWORD=""

#set options for ldap connection - change opt_debug_level to 1 for debugging
AUTH_LDAP_CONNECTION_OPTIONS={
    ldap.OPT_DEBUG_LEVEL:0,
    ldap.OPT_REFERRALS:0,
}

#ldap address of organisational unit(s) to search for user accounts
AUTH_LDAP_USER_SEARCH=LDAPSearch("",\
    ldap.SCOPE_SUBTREE,"(sAMAccountName=%(user)s)")

#ldap address of OU to search for groups
AUTH_LDAP_GROUP_SEARCH=LDAPSearch("",\
    ldap.SCOPE_SUBTREE,"(objectClass=group)")

#type of group used in database(defaulted as Nested Active Directory type)
AUTH_LDAP_GROUP_TYPE=NestedActiveDirectoryGroupType(name_attr="sAMAccountName")

#caching settings
AUTH_LDAP_CACHE_GROUPS=True
AUTH_LDAP_GROUP_CACHE_TIMEOUT=300

#account detail mappings between django fields and ldap fields
AUTH_LDAP_USER_ATTR_MAP={
    "first_name":"givenName",
    "last_name":"sn",
    "email":"mail",
}
#assigns admin access permissions by ldap group membership.
AUTH_LDAP_USER_FLAGS_BY_GROUP={
    "is_staff":[],

}
#sets required group membership to be able to log in
AUTH_LDAP_REQUIRE_GROUP=()


AUTH_LDAP_FIND_GROUP_PERMS=True
