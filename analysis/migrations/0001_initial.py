# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-09 10:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='classgroup',
            fields=[
                ('class_code', models.CharField(help_text='The unique class identifier code.', max_length=10, primary_key=True, serialize=False)),
                ('staff', models.CharField(help_text='The staff member(s) assigned to this group.', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='datadrop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The label identifying the datadrop, e.g. Y9 DD3', max_length=30)),
                ('date', models.DateField(help_text='The date the datadrop ended.')),
            ],
        ),
        migrations.CreateModel(
            name='grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField(blank=True, default=0, help_text='The progress the student has made from their baseline.')),
            ],
        ),
        migrations.CreateModel(
            name='gradeMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='The identifying label for the grading scheme.', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='gradeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The grade symbol, e.g. A+, 9=, 4.3, Pass', max_length=5)),
                ('progress_value', models.IntegerField(verbose_name="The value of the grade in the school's internal progress system.")),
                ('att8_value', models.DecimalField(blank=True, decimal_places=1, help_text='The value of the grade towards Attainment 8.', max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='student',
            fields=[
                ('upn', models.CharField(help_text='Unique 13-character identifier used in many school systems.', max_length=13, primary_key=True, serialize=False)),
                ('forename', models.CharField(help_text="The student's forename(s).", max_length=50)),
                ('surname', models.CharField(help_text="The student's surname(s).", max_length=75)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('N', 'Not Specified')], help_text='The gender identity of the student.', max_length=1)),
                ('ks2_reading', models.CharField(help_text="The student's reading score at the end of KS2.", max_length=5)),
                ('ks2_maths', models.CharField(help_text="The student's maths score at the end of KS2.", max_length=5)),
                ('ks2_average', models.CharField(help_text="The student's average reading and maths score at the end of KS2", max_length=5)),
                ('banding', models.CharField(choices=[('H', 'Upper/High Ability'), ('M', 'Middle Ability'), ('L', 'Lower Ability'), ('N', 'No data')], help_text='The ability grouping the student belongs to.', max_length=1)),
                ('eal', models.BooleanField(help_text='Whether the student has a native language other than English.')),
                ('pp', models.BooleanField(help_text='Whether the student is a pupil premium student.')),
                ('sen', models.CharField(choices=[('N', 'Non SEN'), ('K', 'K SEN'), ('E', 'EHCP')], default='N', help_text='The Special Educational Need code applicable to the student.', max_length=1)),
                ('lac', models.BooleanField(help_text='Whether the student is a Looked After Child (in social care.')),
                ('fsm_ever', models.BooleanField(help_text='Whether the student has ever been eligible for Free School Meals.')),
                ('class_codes', models.ManyToManyField(blank=True, help_text='The classes that the student belongs to.', to='analysis.classgroup')),
            ],
        ),
        migrations.CreateModel(
            name='subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The subject's name.", max_length=100)),
                ('attainment8bucket', models.CharField(choices=[('en', 'English'), ('ma', 'Maths'), ('eb', 'Ebacc'), ('op', 'Open')], help_text='The highest Attainment 8 bucket the subject can be counted in.', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='yeargroup',
            fields=[
                ('cohort', models.CharField(choices=[('2017-2018', '2017-2018'), ('2018-2019', '2018-2019'), ('2019-2020', '2019-2020'), ('2020-2021', '2020-2021'), ('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027')], help_text='The graduating year of this yeargroup.', max_length=9, primary_key=True, serialize=False)),
                ('current_year', models.CharField(choices=[('7', 'Year 7'), ('8', 'Year 8'), ('9', 'Year 9'), ('10', 'Year 10'), ('11', 'Year 11')], help_text='The current yeargroup the cohort is in.', max_length=2)),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='cohort',
            field=models.ForeignKey(help_text='The yeargroup studying the subject.', on_delete=django.db.models.deletion.CASCADE, to='analysis.yeargroup'),
        ),
        migrations.AddField(
            model_name='subject',
            name='method',
            field=models.ForeignKey(help_text='The grade method used by the subject.', on_delete=django.db.models.deletion.CASCADE, to='analysis.gradeMethod'),
        ),
        migrations.AddField(
            model_name='student',
            name='cohort',
            field=models.ForeignKey(help_text='The yeargroup the student belongs to.', on_delete=django.db.models.deletion.CASCADE, to='analysis.yeargroup'),
        ),
        migrations.AddField(
            model_name='student',
            name='reg',
            field=models.ForeignKey(help_text='The registration group the pupil belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='reg_group', to='analysis.classgroup'),
        ),
        migrations.AddField(
            model_name='grademethod',
            name='pass_grade',
            field=models.ForeignKey(help_text='The grade considered a pass or strong pass for the purposes of headline measures (e.g. EnMa Basics, Ebacc).', on_delete=django.db.models.deletion.CASCADE, to='analysis.gradeValue'),
        ),
        migrations.AddField(
            model_name='grademethod',
            name='values',
            field=models.ManyToManyField(help_text='The set of grades used/included in the grading method.', related_name='gradeset', to='analysis.gradeValue'),
        ),
        migrations.AddField(
            model_name='grade',
            name='EAPgrade',
            field=models.ForeignKey(help_text='The estimated attainment for the student in this data drop.', on_delete=django.db.models.deletion.CASCADE, related_name='EAP', to='analysis.gradeValue'),
        ),
        migrations.AddField(
            model_name='grade',
            name='datadrop',
            field=models.ForeignKey(help_text='The data drop that the grade is part of.', on_delete=django.db.models.deletion.CASCADE, to='analysis.datadrop'),
        ),
        migrations.AddField(
            model_name='grade',
            name='method',
            field=models.ForeignKey(help_text='The grade method the grade belongs to.', on_delete=django.db.models.deletion.CASCADE, to='analysis.gradeMethod'),
        ),
        migrations.AddField(
            model_name='grade',
            name='subject',
            field=models.ForeignKey(help_text='The subject the grade was given in.', on_delete=django.db.models.deletion.CASCADE, to='analysis.subject'),
        ),
        migrations.AddField(
            model_name='grade',
            name='upn',
            field=models.ForeignKey(help_text='The UPN of the student the grade has been given to.', on_delete=django.db.models.deletion.CASCADE, to='analysis.student'),
        ),
        migrations.AddField(
            model_name='grade',
            name='value',
            field=models.ForeignKey(help_text='The grade given.', on_delete=django.db.models.deletion.CASCADE, to='analysis.gradeValue'),
        ),
        migrations.AddField(
            model_name='datadrop',
            name='cohort',
            field=models.ForeignKey(help_text='The yeargroup the data drop belongs to.', on_delete=django.db.models.deletion.CASCADE, to='analysis.yeargroup'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='cohort',
            field=models.ForeignKey(help_text="The yeargroup that the class group's students belong to.", on_delete=django.db.models.deletion.CASCADE, to='analysis.yeargroup'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='subject',
            field=models.ManyToManyField(blank=True, help_text='The subject(s) studied by the group.', to='analysis.subject'),
        ),
    ]
